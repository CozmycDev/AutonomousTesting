import os
import json
import io
import traceback


class Watcher:
    def __init__(self, bot, path='cogs', preload=True, debug=False):
        self.bot = bot
        self.path = path
        self.preload = preload
        self.debug = debug

    async def start(self):
        if not self.debug:
            return
        with open("cogs/watcher.py", "r") as watcher_file:
            watcher = Watcher(bot=self.bot, path="cogs", preload=True, debug=False)
            await watcher.start()

    @property
    def guild_listeners(self):
        from cogwatch import GuildListener
        return [GuildListener(self, guild) for guild in self.get_guilds]


class PingCommand(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        
    @slash_command(name='ping', description='Example slash command.')
    async def test_command(
        self,
        ctx: discord.ApplicationContext,
        test_string: str
    ):
        await ctx.defer()
        await ctx.respond(content=f"you said {test_string}")
        
        
def setup(bot: commands.Bot) -> None:
    bot.add_cog(PingCommand(bot))