from typing import Optional
import json

class File:
    def __init__(self, name: str, content: str):
        self._name = name
        self._content = content

    @classmethod
    def from_json(cls, filename: str) -> 'File':
        with open(filename, 'r') as file:
            data = json.load(file)
            return cls(name=data['name'], content=data['content'])

    @classmethod
    def from_text(cls, filename: str, content: Optional[str] = None) -> 'File':
        if content is not None:
            return cls(name=filename, content=content)
        raise ValueError("Content must be provided")

    def save_to_json(self, filename: str):
        data = {'name': self._name, 'content': self._content}
        with open(filename, 'w') as file:
            json.dump(data, file)

    def __str__(self) -> str:
        return f"{self._name}: {self._content}"